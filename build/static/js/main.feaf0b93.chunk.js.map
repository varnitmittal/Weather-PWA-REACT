{"version":3,"sources":["components/navbar/navbar.component.js","components/search/search.component.js","components/display/display.component.js","components/container/container.component.js","App.js","serviceWorker.js","index.js","config/config.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","logoText","handleOnClick","bind","assertThisInitialized","window","location","reload","react_default","a","createElement","className","href","onClick","style","fontWeight","fontSize","textShadow","React","Component","Search","hasSubmitted","handleOnChange","handleOnSubmit","e","setState","searchText","target","value","preventDefault","func","onSubmit","type","placeholder","aria-label","onChange","background","Display","prevProps","data","name","document","documentElement","clientWidth","mediaStyling","height","Math","round","temp","weatherDesc","tempMax","tempMin","humidity","Container","gotCompleteData","imageQuery","weatherQuery","newState","queryOptimizer","queryToken","apiDataW","_this2","apiKey","config","apiKeyImage","query","apiFetchURL","concat","axios","get","headers","Authorization","then","res","apiData","numberOfPics","per_page","total_results","photos","i","push","index","largePicUrl","src","large2x","photographer","apiDataP","hasPhotosData","photosData","catch","err","console","log","_this3","_ref","apiKeyWeather","weather","main","alert","weatherData","temp_max","temp_min","weatherMain","description","windSpeed","wind","speed","floor","random","bgImageUrl","backgroundSize","navbar_component","opacity","search_component","paddingTop","display_component","App","container_component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"6QA+BeA,cA5BX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,SAAU,WAEdR,EAAKS,cAAgBT,EAAKS,cAAcC,KAAnBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KALPA,+EASdY,OAAOC,SAASC,0CAIpB,OACEC,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DAEXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,KAAKD,UAAU,iCAAiCE,QAASjB,KAAKM,cAClEY,MAAO,CAACC,WAAY,OAAQC,SAAU,SAAUC,WAAY,wBAC3DrB,KAAKI,MAAMC,mBArBPiB,IAAMC,WCmDZC,cAlDX,SAAAA,EAAY5B,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,IACd3B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0B,GAAArB,KAAAH,KAAMJ,KACDQ,MAAQ,CACTqB,cAAc,GAElB5B,EAAK6B,eAAiB7B,EAAK6B,eAAenB,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACtBA,EAAK8B,eAAiB9B,EAAK8B,eAAepB,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KANRA,8EASH+B,GACX5B,KAAK6B,SAAS,CACVC,WAAYF,EAAEG,OAAOC,+CAIdJ,GACXA,EAAEK,iBACFjC,KAAKJ,MAAMsC,KAAKlC,KAAKI,OACrBJ,KAAK6B,SAAS,CACVJ,cAAc,EACdK,WAAY,sCAMpB,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAkBG,MAAS,CAACG,WAAY,wBACnDT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sCACZoB,SAAUnC,KAAK2B,gBAEff,EAAAC,EAAAC,cAAA,SAAOC,UAAU,0CAA0CqB,KAAK,OAC5DC,YAAY,SAASC,aAAW,SAAUC,SAAUvC,KAAK0B,eACzDR,MAAS,CAAEE,SAAU,OAAQoB,WAAY,2BAE7C5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kDAAkDqB,KAAK,UAAzE,sBAvCPd,IAAMC,4CCuEZkB,cAtEX,SAAAA,EAAY7C,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACd5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMJ,KACDQ,MAAQP,EAAKD,MAFJC,kFAKC6C,GACZA,EAAUC,KAAKC,OAAS5C,KAAKJ,MAAM+C,KAAKC,MACzC5C,KAAK6B,SAAS,CAACc,KAAM3C,KAAKJ,MAAM+C,wCAKlC,GAAIE,SAASC,gBAAgBC,YAAc,IACvC,IAAIC,EAAe,CAAE5B,SAAU,MAAOoB,WAAY,wBAG9CQ,EAAe,CAAE5B,SAAU,OAGrC,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAAuCG,MAAO,CAAE+B,OAAQ,SAClErC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCG,MAAO,CAAEG,WAAY,wBAClET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACXG,MAAO,CAAEE,SAAU,QAEjBpB,KAAKI,MAAMuC,KAAKC,MAEtBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,QAAMI,MAAO,CAAEE,SAAU,OAAQD,WAAY,SACvC+B,KAAKC,MAAMnD,KAAKI,MAAMuC,KAAKS,OAEjCxC,EAAAC,EAAAC,cAAA,QAAMI,MAAQ,CAACE,SAAU,QAAzB,YAINR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbG,MAAO8B,GAEHpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACTf,KAAKI,MAAMuC,KAAKU,aAGtBzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACXH,EAAAC,EAAAC,cAAA,0BACiBd,KAAKI,MAAMuC,KAAKW,QADjC,WAKJ1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACXH,EAAAC,EAAAC,cAAA,0BACiBd,KAAKI,MAAMuC,KAAKY,QADjC,WAKJ3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wDACXH,EAAAC,EAAAC,cAAA,yBACgBd,KAAKI,MAAMuC,KAAKa,sBA5DtClC,IAAMC,WCqJbkC,cA/Ib,SAAAA,EAAY7D,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IAChB5D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2D,GAAAtD,KAAAH,KAAMJ,KACAQ,MAAM,CACVsD,iBAAiB,GAElB7D,EAAK8D,WAAa9D,EAAK8D,WAAWpD,KAAhBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACnBA,EAAK+D,aAAe/D,EAAK+D,aAAarD,KAAlBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACpBA,EAAKgE,SAAUhE,EAAKgE,SAAStD,KAAdT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACfA,EAAKiE,eAAiBjE,EAAKiE,eAAevD,KAApBT,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KARNA,8EAWHkE,GACb,MAAkB,SAAfA,GAAwC,SAAfA,EACnB,iBACc,WAAfA,GAA0C,WAAfA,EAC1B,SACc,SAAfA,GAAwC,SAAfA,EACxB,eACc,SAAfA,GAAwC,SAAfA,EACxB,cACc,UAAfA,GAAwC,UAAdA,EACzB,WAEAA,qCAGAA,EAAYC,GAAS,IAAAC,EAAAjE,KAE1BkE,EAASC,IAAOC,YAChBC,EAAQrE,KAAK8D,eAAeC,GAC5BO,EAAW,0CAAAC,OAA6CF,GAE5DG,IAAMC,IAAIH,EAAa,CAAEI,QAAY,CAAEC,cAAiBT,KACvDU,KAAK,SAAAC,GACF,IAAIC,EAAUD,EAAIlC,KACdoC,EAAeD,EAAQE,SACxBF,EAAQG,cAAc,KACvBF,EAAeD,EAAQG,eAGzB,IADA,IAAIC,EAAQ,GACJC,EAAE,EAAGA,EAAEJ,EAAcI,IAC3BD,EAAOE,KAAK,CACRC,MAAOF,EACPG,YAAaR,EAAQI,OAAOC,GAAGI,IAAIC,QACnCC,aAAcX,EAAQI,OAAOC,GAAGM,eAGtC,IAAIC,EAAY,CACdC,eAAe,EACfC,WAAY,CACVV,OAAQA,EACRH,aAAcA,IAGlBd,EAAKJ,SAAS6B,EAASE,WAAY5B,KAEtC6B,MAAM,SAAAC,GACHC,QAAQC,IAAIF,6CAIU,IAAAG,EAAAjG,KAAb8B,EAAaoE,EAAbpE,WACToC,EAASC,IAAOgC,cAEhB7B,EAAW,qDAAAC,OADHzC,EACG,WAAAyC,OAAuEL,EAAvE,iBAGfM,IAAMC,IAAIH,GACTM,KAAK,SAAAC,GACJ,IAAIb,EAAWa,EAAIlC,KAEnBsD,EAAKtC,WAAWK,EAASoC,QAAQ,GAAGC,KAAMrC,KAE3C6B,MAAM,SAAAC,GACDrF,OAAO6F,MAAM,8BACbP,QAAQC,IAAIF,sCAIXJ,EAAU1B,GACjBhE,KAAK6B,SAAS,CACZ6B,iBAAiB,EACjBkC,WAAYF,EACZa,YAAa,CACX/C,SAAUQ,EAASqC,KAAK7C,SACxBJ,KAAMY,EAASqC,KAAKjD,KACpBE,QAASU,EAASqC,KAAKG,SACvBjD,QAASS,EAASqC,KAAKI,SACvBC,YAAa1C,EAASoC,QAAQ,GAAGC,KACjChD,YAAaW,EAASoC,QAAQ,GAAGO,YACjCC,UAAW5C,EAAS6C,KAAKC,MACzBlE,KAAMoB,EAASpB,yCAMnB,GAAG5C,KAAKI,MAAMsD,gBAAgB,CAC5B,IAAI2B,EAAQnC,KAAK6D,MAAuB,EAAhB7D,KAAK8D,UACzBC,EAAajH,KAAKI,MAAMwF,WAAWV,OAAOG,GAAOC,YACrD,OACE1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQG,MAAS,CAC7BsB,WAAU,OAAA+B,OAAS0C,EAAT,mCACVC,eAAgB,UAGhBtG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,MAAO,CAAEkG,QAAS,IACzCxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAACuG,EAAD,CAAQnF,KAAQlC,KAAK4D,gBAEvBhD,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEoG,WAAY,QAEzBtH,KAAKI,MAAMsD,gBAAkB9C,EAAAC,EAAAC,cAACyG,EAAD,CAAS5E,KAAM3C,KAAKI,MAAMmG,cAAkB,SAUtF,OACE3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOG,MAAS,CAAEsB,WAAY,UAAWS,OAAQ,UAC1DrC,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,MAAS,IAEhCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACXH,EAAAC,EAAAC,cAACuG,EAAD,CAAQnF,KAAQlC,KAAK4D,gBAEzBhD,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEoG,WAAY,QAEzBtH,KAAKI,MAAMsD,gBAAkB9C,EAAAC,EAAAC,cAACyG,EAAD,CAAS5E,KAAM3C,KAAKI,MAAMmG,cAAkB,eAvIlEjF,IAAMC,WCOfiG,mLARX,OACE5G,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEsB,WAAY,YACxB5B,EAAAC,EAAAC,cAAC2G,EAAD,cAJUnG,IAAMC,WCQlBmG,EAAcC,QACW,cAA7BlH,OAAOC,SAASkH,UAEe,UAA7BnH,OAAOC,SAASkH,UAEhBnH,OAAOC,SAASkH,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAO5D,GAC9B6D,UAAUC,cACPC,SAASH,GACTnD,KAAK,SAAAuD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjI,QACf4H,UAAUC,cAAcO,YAI1BzC,QAAQC,IACN,iHAKE7B,GAAUA,EAAOsE,UACnBtE,EAAOsE,SAASN,KAMlBpC,QAAQC,IAAI,sCAGR7B,GAAUA,EAAOuE,WACnBvE,EAAOuE,UAAUP,UAO5BtC,MAAM,SAAA8C,GACL5C,QAAQ4C,MAAM,4CAA6CA,KC1FjEC,IAASC,OAAOjI,EAAAC,EAAAC,cAACgI,EAAD,MAASjG,SAASkG,eAAe,SDgB1C,SAAkB5E,GACvB,GAA6C,kBAAmB6D,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwBxI,OAAOC,SAASM,MACpDkI,SAAWzI,OAAOC,SAASwI,OAIvC,OAGFzI,OAAO0I,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAxD,OAAM0E,GAAN,sBAEPvB,GAgEV,SAAiCK,EAAO5D,GAEtCiF,MAAMrB,GACHnD,KAAK,SAAAyE,GAEJ,IAAMC,EAAcD,EAAS3E,QAAQD,IAAI,gBAEnB,MAApB4E,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CxB,UAAUC,cAAcwB,MAAM7E,KAAK,SAAAuD,GACjCA,EAAauB,aAAa9E,KAAK,WAC7BnE,OAAOC,SAASC,aAKpBmH,EAAgBC,EAAO5D,KAG1B0B,MAAM,WACLE,QAAQC,IACN,mEArFA2D,CAAwB5B,EAAO5D,GAI/B6D,UAAUC,cAAcwB,MAAM7E,KAAK,WACjCmB,QAAQC,IACN,gHAMJ8B,EAAgBC,EAAO5D,MCvC/B8D,oBCXA2B,EAAOC,QACH,CACGzF,YAAa,2DACb+B,cAAe","file":"static/js/main.feaf0b93.chunk.js","sourcesContent":["import React from 'react';\n\nclass NavBar extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            logoText: \"WEATHER\",\n        }\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n\n    handleOnClick(){\n        window.location.reload();\n    }\n\n  render() {\n    return (\n      <div>\n          {/* navbar */}\n        <nav className=\"navbar navbar-expand-lg navbar-static-top scrolling-navbar\">    \n            {/* navbar brand */}\n            <a href=\"#!\" className=\"navbar-brand center text-white\" onClick={this.handleOnClick}\n                style={{fontWeight: 'bold', fontSize: '1.9rem', textShadow: '2px 2px 4px #000000' }}>\n                {this.state.logoText}\n            </a>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\n\nclass Search extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasSubmitted: false\n        }\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    }\n\n    handleOnChange(e){\n        this.setState({\n            searchText: e.target.value\n        });\n    }\n\n    handleOnSubmit(e){\n        e.preventDefault();\n        this.props.func(this.state);\n        this.setState({\n            hasSubmitted: true,\n            searchText: \"\"\n        });\n\n}\n\n  render() {\n    return (\n        <div className=\"padding margin\"  style = {{textShadow: '2px 2px 4px #000000'}}> \n            <div className=\"row d-flex justify-content-center align-items-center\">\n                <div className=\"col-xl-12 col-md-12 col-sm-12 col-xs-12\">\n                    <form className=\"form-inline md-form mb-4 text-white\"  \n                        onSubmit={this.handleOnSubmit}\n                    >\n                        <input className=\"form-control input-lg text-white col-12\" type=\"text\" \n                            placeholder=\"Search\" aria-label=\"Search\"  onChange={this.handleOnChange} \n                            style = {{ fontSize: '20px', background: 'rgba(255,255,255,0.1)'}}\n                        />\n                        <div className=\"col-12\">\n                            <button className=\"btn btn-outline-white btn-rounded btn-sm col-12\" type=\"submit\">\n                                Search\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Search;","import React from 'react';\n\nclass Display extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = this.props;\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.data.name !== this.props.data.name) {\n          this.setState({data: this.props.data});\n        }\n      }\n\n  render() {\n        if (document.documentElement.clientWidth > 650) {\n            var mediaStyling = { fontSize: '3vh', background :'rgba(0,0,0,0.3)' };\n        }\n        else {\n            var mediaStyling = { fontSize: '3vh' };\n        }\n    \n      return (\n        <div className=\"container text-white vertical-center\" style={{ height: '85vh' }} >\n             <div className=\"row\" >\n\n              <div className=\"col-xl-4 col-sm-12 col-xs-12 \" style={{ textShadow: '2px 2px 4px #000000' }}>\n                <div className=\"text-center font-weight-bold text-capitalize align-middle\"\n                    style={{ fontSize: '7vh' }}\n                >\n                    { this.state.data.name }\n                </div> \n                <div className=\"text-center text-capitalize\">\n                    <span style={{ fontSize: '18vh', fontWeight: 'bold' }}>\n                        { Math.round(this.state.data.temp) }\n                    </span>\n                    <span style= {{fontSize: '6vh'}}>&#8451;</span>\n                </div>\n              </div>\n              \n              <div className=\"col-xl-8 col-sm-12 col-xs-12 row align-items-center\" \n                style={mediaStyling}\n              >\n                    <div className=\"col col-xs-12 col-sm-12\"  >\n                        <div className=\"text-center font-weight-bold text-capitalize padding\">\n                            { this.state.data.weatherDesc }\n                        </div>\n\n                        <div className=\"text-center font-weight-bold text-capitalize padding\">\n                            <span>\n                                Max. Temp: { this.state.data.tempMax }&#8451;\n                            </span>\n                        </div>\n\n                        <div className=\"text-center font-weight-bold text-capitalize padding\">\n                            <span>\n                                Min. Temp: { this.state.data.tempMin }&#8451;\n                            </span>\n                        </div>\n\n                        <div className=\"text-center font-weight-bold text-capitalize padding\">\n                            <span>\n                                Humidity: { this.state.data.humidity }\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Display;\n","import React from 'react';\nimport NavBar from '../navbar/navbar.component';\nimport Search from '../search/search.component';\nimport config from '../../config/config';\nimport axios from 'axios';\nimport Display from '../display/display.component';\n\nclass Container extends React.Component {\n  constructor(props){\n    super(props);\n     this.state={\n      gotCompleteData: false\n    }\n     this.imageQuery = this.imageQuery.bind(this);\n    this.weatherQuery = this.weatherQuery.bind(this);\n    this.newState =this.newState.bind(this);\n    this.queryOptimizer = this.queryOptimizer.bind(this);\n  }\n\n  queryOptimizer(queryToken){\n    if(queryToken === 'haze' || queryToken === 'Haze')\n      return 'haze landscape';\n    else if(queryToken === 'clouds' || queryToken === 'Clouds')\n      return 'cloudy';\n    else if(queryToken === 'mist' || queryToken === 'Mist')\n      return 'mist weather';\n    else if(queryToken === 'rain' || queryToken === 'Rain')\n      return 'rain nature';\n    else if(queryToken === 'clear' || queryToken ==='Clear')\n      return 'blue sky';\n    else\n      return queryToken;\n  }\n\n  imageQuery(queryToken, apiDataW){\n    //fetching photos data from API\n    let apiKey = config.apiKeyImage;\n    let query = this.queryOptimizer(queryToken);\n    let apiFetchURL = `https://api.pexels.com/v1/search?query=${query}`;\n    \n    axios.get(apiFetchURL, { 'headers' : { 'Authorization': apiKey } })\n    .then(res => {\n        let apiData = res.data;\n        let numberOfPics = apiData.per_page;\n        if(apiData.total_results<15){\n          numberOfPics = apiData.total_results;\n        }\n        let photos =[];\n        for(var i=0; i<numberOfPics; i++){\n          photos.push({\n              index: i,\n              largePicUrl: apiData.photos[i].src.large2x,\n              photographer: apiData.photos[i].photographer\n          })\n        }\n        let apiDataP = ({\n          hasPhotosData: true,\n          photosData: {\n            photos: photos,\n            numberOfPics: numberOfPics\n          }\n        });\n        this.newState(apiDataP.photosData, apiDataW);        \n    })\n    .catch(err => {\n        console.log(err);\n    })\n  }\n\n  weatherQuery({ searchText }){\n    let apiKey = config.apiKeyWeather;\n    let query = searchText;\n    let apiFetchURL = `https://api.openweathermap.org/data/2.5/weather?q=${query}&APPID=${apiKey}&units=metric`;\n    \n    //fetching weather from API\n    axios.get(apiFetchURL)\n    .then(res => {\n      let apiDataW = res.data;\n\n      this.imageQuery(apiDataW.weather[0].main, apiDataW)\n    })\n    .catch(err => {\n          window.alert('Input not valid. Try again')\n          console.log(err);\n    })\n  }\n\n  newState(apiDataP, apiDataW){\n    this.setState({\n      gotCompleteData: true,\n      photosData: apiDataP,\n      weatherData: {          \n        humidity: apiDataW.main.humidity,\n        temp: apiDataW.main.temp,\n        tempMax: apiDataW.main.temp_max,\n        tempMin: apiDataW.main.temp_min,\n        weatherMain: apiDataW.weather[0].main,\n        weatherDesc: apiDataW.weather[0].description,\n        windSpeed: apiDataW.wind.speed,\n        name: apiDataW.name\n      }\n    })\n  }\n\n  render() {\n    if(this.state.gotCompleteData){\n      let index = Math.floor((Math.random() * 8));\n      let bgImageUrl = this.state.photosData.photos[index].largePicUrl;\n      return (\n        <div className=\"view \" style = {{ \n           background: `url(${bgImageUrl}) no-repeat center center fixed`,\n           backgroundSize: 'cover'\n           }}\n        >\n           <div >\n            <NavBar />\n            <div className=\"container\" style={{ opacity: 1 }}>\n                <div className=\"col-xl-4 col-lg-6 col-md-7 col-sm-8 col-sx-12\">\n                  <Search func = {this.weatherQuery} />\n                </div>\n                <div style={{ paddingTop: '5vh'}}>\n\n                {this.state.gotCompleteData ? <Display data={this.state.weatherData} /> : null}\n\n                </div>\n            </div>\n          </div>\n        </div>\n      )\n    }\n\n    else\n    return (\n      <div className=\"view\" style = {{ background: '#000000', height: '110vh' }}>\n            <NavBar />\n            <div className=\"container\" style = {{  }}>\n                \n                <div className=\"col-xl-4 col-lg-6 col-md-7 col-sm-8 col-sx-12\">\n                    <Search func = {this.weatherQuery} />\n                </div>\n                <div style={{ paddingTop: '5vh'}}>\n\n                {this.state.gotCompleteData ? <Display data={this.state.weatherData} /> : null}\n\n                </div>\n            </div>\n      </div>\n    ) \n  }\n}\n\nexport default Container;\n","import React from 'react';\nimport './App.css';\nimport Container from './components/container/container.component'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div style={{ background: '#000000' }} >\n        <Container />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = (\n    {\n       apiKeyImage: \"563492ad6f91700001000001d6bf1cf64df8485cae150e986061e92f\",\n       apiKeyWeather: \"e6b35db9c089fce501953bc4d411a647\"\n    }   \n);"],"sourceRoot":""}